{"version":3,"file":"index-a73e9589.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../Home.jsx","../../Dashboard.jsx","../../Generator.jsx","../../VideoClipper.jsx","../../src/config/api.js","../../src/AdvancedVideoGenerator.jsx","../../Library.jsx","../../ProfileSettings.jsx","../../SocialConnector.jsx","../../Pricing.jsx","../../Login.jsx","../../Signup.jsx","../../Billing.jsx","../../App.jsx","../../main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const features = [\r\n    {\r\n      title: 'AI Video Clipping',\r\n      description: 'Turn any long video into viral shorts with AI-powered clipping',\r\n      icon: '✂️',\r\n      highlight: '10x faster than manual editing'\r\n    },\r\n    {\r\n      title: 'AI Content Generation',\r\n      description: 'Generate engaging social media posts, captions, and scripts',\r\n      icon: '🤖',\r\n      highlight: 'AI-powered content creation'\r\n    },\r\n    {\r\n      title: 'Multi-Platform Publishing',\r\n      description: 'Automatically publish to TikTok, Instagram, YouTube, and more',\r\n      icon: '📱',\r\n      highlight: 'One-click publishing'\r\n    },\r\n    {\r\n      title: 'AI B-Roll Generation',\r\n      description: 'Generate relevant B-roll footage to enhance your videos',\r\n      icon: '🎬',\r\n      highlight: 'AI-generated footage'\r\n    },\r\n    {\r\n      title: 'Brand Templates',\r\n      description: 'Create and apply consistent brand templates across all content',\r\n      icon: '🎨',\r\n      highlight: 'Brand consistency'\r\n    },\r\n    {\r\n      title: 'Analytics & Insights',\r\n      description: 'Track performance and optimize your content strategy',\r\n      icon: '📊',\r\n      highlight: 'Data-driven insights'\r\n    }\r\n  ];\r\n\r\n  const testimonials = [\r\n    {\r\n      name: 'Sarah Johnson',\r\n      role: 'Content Creator',\r\n      company: '@sarahcreates',\r\n      content: 'Influencore helped me scale from 10K to 100K followers in just 3 months!',\r\n      avatar: '👩‍💼',\r\n      followers: '100K+'\r\n    },\r\n    {\r\n      name: 'Mike Chen',\r\n      role: 'Marketing Director',\r\n      company: 'TechFlow Inc.',\r\n      content: 'Our team saves 20+ hours per week on content creation. The AI suggestions are incredibly accurate.',\r\n      avatar: '👨‍💼',\r\n      followers: '50K+'\r\n    },\r\n    {\r\n      name: 'Emma Rodriguez',\r\n      role: 'Influencer',\r\n      company: '@emma_lifestyle',\r\n      content: 'The video clipping feature is game-changing. My engagement rates have doubled!',\r\n      avatar: '👩‍🎨',\r\n      followers: '200K+'\r\n    }\r\n  ];\r\n\r\n  const stats = [\r\n    { label: 'Video Creators', value: '12M+', icon: '👥' },\r\n    { label: 'Videos Processed', value: '500K+', icon: '🎬' },\r\n    { label: 'Platforms Supported', value: '8', icon: '📱' },\r\n    { label: 'Avg. Engagement Increase', value: '300%', icon: '📈' }\r\n  ];\r\n\r\n  const handleVideoSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!videoUrl.trim()) return;\r\n    \r\n    setIsProcessing(true);\r\n    // Simulate processing\r\n    setTimeout(() => {\r\n      setIsProcessing(false);\r\n      alert('Video processing started! Check your dashboard for results.');\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Link to=\"/\" className=\"text-2xl font-bold\">🎯 Influencore</Link>\r\n            <div className=\"flex items-center space-x-6\">\r\n              <Link to=\"/features\" className=\"hover:text-blue-400 transition-colors\">Features</Link>\r\n              <Link to=\"/pricing\" className=\"hover:text-blue-400 transition-colors\">Pricing</Link>\r\n              <Link to=\"/contact\" className=\"hover:text-blue-400 transition-colors\">Contact</Link>\r\n              <Link to=\"/login\" className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                Sign In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hero Section */}\r\n      <div className=\"max-w-7xl mx-auto px-4 py-16\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-6xl font-bold mb-6\">\r\n            #1 AI VIDEO CLIPPING TOOL\r\n          </h1>\r\n          <h2 className=\"text-4xl font-bold mb-6 text-blue-400\">\r\n            1 long video, 10 viral clips. Create 10x faster.\r\n          </h2>\r\n          <p className=\"text-xl text-gray-300 mb-8 max-w-3xl mx-auto\">\r\n            Influencore turns long videos into shorts, and publishes them to all social platforms in one click.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Video Upload Section */}\r\n        <div className=\"max-w-4xl mx-auto mb-16\">\r\n          <div className=\"bg-gray-800 rounded-lg p-8 border border-gray-700\">\r\n            <h3 className=\"text-2xl font-bold mb-6 text-center\">Drop a video link</h3>\r\n            <form onSubmit={handleVideoSubmit} className=\"space-y-4\">\r\n              <input\r\n                type=\"url\"\r\n                value={videoUrl}\r\n                onChange={(e) => setVideoUrl(e.target.value)}\r\n                placeholder=\"https://youtube.com/watch?v=...\"\r\n                className=\"w-full p-4 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white placeholder-gray-400\"\r\n              />\r\n              <div className=\"text-sm text-gray-400 text-center\">\r\n                For Pro plan, we support videos from: YouTube, Google Drive, Vimeo, Zoom, Rumble, Twitch, Facebook, LinkedIn, Twitter, Loom, Riverside, StreamYard and more.\r\n              </div>\r\n              <div className=\"flex justify-center\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isProcessing || !videoUrl.trim()}\r\n                  className=\"px-8 py-4 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-lg font-semibold\"\r\n                >\r\n                  {isProcessing ? 'Processing...' : 'Get Free Clips'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            \r\n            <div className=\"mt-6 text-center\">\r\n              <Link to=\"/generator\" className=\"text-blue-400 hover:text-blue-300 underline\">\r\n                Or try our AI Content Generator →\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats */}\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 mb-16\">\r\n          {stats.map((stat, index) => (\r\n            <div key={index} className=\"text-center\">\r\n              <div className=\"text-3xl mb-2\">{stat.icon}</div>\r\n              <div className=\"text-3xl font-bold text-blue-400\">{stat.value}</div>\r\n              <div className=\"text-gray-400\">{stat.label}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Features */}\r\n        <div className=\"mb-16\">\r\n          <h2 className=\"text-3xl font-bold text-center mb-12\">AI that understands every pixel of your video</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n            {features.map((feature, index) => (\r\n              <div key={index} className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <div className=\"text-4xl mb-4\">{feature.icon}</div>\r\n                <h3 className=\"text-xl font-bold mb-2\">{feature.title}</h3>\r\n                <p className=\"text-gray-300 mb-3\">{feature.description}</p>\r\n                <span className=\"text-blue-400 text-sm font-semibold\">{feature.highlight}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Testimonials */}\r\n        <div className=\"mb-16\">\r\n          <h2 className=\"text-3xl font-bold text-center mb-12\">Used by 12M+ creators and businesses</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            {testimonials.map((testimonial, index) => (\r\n              <div key={index} className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"text-2xl mr-3\">{testimonial.avatar}</div>\r\n                  <div>\r\n                    <div className=\"font-semibold\">{testimonial.name}</div>\r\n                    <div className=\"text-sm text-gray-400\">{testimonial.company}</div>\r\n                    <div className=\"text-xs text-blue-400\">{testimonial.followers} followers</div>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-gray-300 italic\">\"{testimonial.content}\"</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* CTA Section */}\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to scale your video content?</h2>\r\n          <p className=\"text-gray-300 mb-8\">Join millions of creators who trust Influencore</p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <Link\r\n              to=\"/signup\"\r\n              className=\"px-8 py-4 bg-green-600 rounded-lg hover:bg-green-700 transition-colors text-lg font-semibold\"\r\n            >\r\n              Start Free (2 Generations)\r\n            </Link>\r\n            <Link\r\n              to=\"/pricing\"\r\n              className=\"px-8 py-4 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors text-lg font-semibold\"\r\n            >\r\n              View Plans\r\n            </Link>\r\n          </div>\r\n          <p className=\"text-sm text-gray-400 mt-4\">\r\n            No credit card required • 2 free generations • Upgrade anytime\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n  const [stats, setStats] = useState({\r\n    totalPosts: 0,\r\n    connectedPlatforms: 0,\r\n    savedTemplates: 0,\r\n    totalEngagement: 0,\r\n    avgEngagement: 0,\r\n    recentActivity: []\r\n  });\r\n  const [userSession, setUserSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = () => {\r\n    // Load user session\r\n    const session = localStorage.getItem('userSession');\r\n    if (session) {\r\n      setUserSession(JSON.parse(session).user);\r\n    }\r\n\r\n    // Load posts from library\r\n    const savedPosts = localStorage.getItem('libraryPosts');\r\n    const generatedPosts = localStorage.getItem('generatedPosts');\r\n    const connections = localStorage.getItem('socialConnections');\r\n    const userProfile = localStorage.getItem('userProfile');\r\n\r\n    const posts = [\r\n      ...(savedPosts ? JSON.parse(savedPosts) : []),\r\n      ...(generatedPosts ? JSON.parse(generatedPosts) : [])\r\n    ];\r\n\r\n    const connectionsData = connections ? JSON.parse(connections) : {};\r\n    const profileData = userProfile ? JSON.parse(userProfile) : {};\r\n\r\n    // Calculate engagement metrics\r\n    const totalEngagement = posts.reduce((sum, post) => {\r\n      const baseEngagement = Math.floor(Math.random() * 1000) + 100;\r\n      return sum + baseEngagement;\r\n    }, 0);\r\n\r\n    const avgEngagement = posts.length > 0 ? Math.floor(totalEngagement / posts.length) : 0;\r\n\r\n    setStats({\r\n      totalPosts: posts.length,\r\n      connectedPlatforms: Object.keys(connectionsData).length,\r\n      savedTemplates: 6, // Hardcoded for now\r\n      totalEngagement: totalEngagement,\r\n      avgEngagement: avgEngagement,\r\n      recentActivity: posts.slice(0, 5).map(post => ({\r\n        type: 'post',\r\n        title: post.title || 'Untitled Post',\r\n        platform: post.platform || 'Unknown',\r\n        date: new Date(post.createdAt).toLocaleDateString(),\r\n        content: post.content?.substring(0, 50) + '...',\r\n        engagement: Math.floor(Math.random() * 1000) + 100\r\n      }))\r\n    });\r\n  };\r\n\r\n  const quickActions = [\r\n    {\r\n      title: 'Generate Content',\r\n      description: 'Create new AI-powered content',\r\n      icon: '🤖',\r\n      link: '/generator',\r\n      color: 'bg-blue-600'\r\n    },\r\n    {\r\n      title: 'View Library',\r\n      description: 'Browse saved content',\r\n      icon: '📚',\r\n      link: '/library',\r\n      color: 'bg-green-600'\r\n    },\r\n    {\r\n      title: 'Connect Platforms',\r\n      description: 'Manage social media connections',\r\n      icon: '🔗',\r\n      link: '/social',\r\n      color: 'bg-purple-600'\r\n    },\r\n    {\r\n      title: 'Settings',\r\n      description: 'Update profile and preferences',\r\n      icon: '⚙️',\r\n      link: '/profile',\r\n      color: 'bg-yellow-600'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-7xl mx-auto\">\r\n      {/* User Welcome Section */}\r\n      {userSession && (\r\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold mb-2\">\r\n                Welcome back, {userSession.firstName || userSession.name || 'User'}!\r\n              </h1>\r\n              <p className=\"text-gray-400\">\r\n                {userSession.plan} Plan • {userSession.subscriptionStatus === 'trial' ? 'Trial' : 'Active'} Subscription\r\n              </p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <Link\r\n                to=\"/billing\"\r\n                className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Manage Billing\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h2 className=\"text-3xl font-bold mb-6\">Dashboard</h2>\r\n      \r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Total Posts</p>\r\n              <p className=\"text-2xl font-bold\">{stats.totalPosts}</p>\r\n            </div>\r\n            <div className=\"text-3xl\">📝</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Connected Platforms</p>\r\n              <p className=\"text-2xl font-bold\">{stats.connectedPlatforms}</p>\r\n            </div>\r\n            <div className=\"text-3xl\">🔗</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Total Engagement</p>\r\n              <p className=\"text-2xl font-bold\">{stats.totalEngagement.toLocaleString()}</p>\r\n            </div>\r\n            <div className=\"text-3xl\">📈</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Avg. Engagement</p>\r\n              <p className=\"text-2xl font-bold\">{stats.avgEngagement}</p>\r\n            </div>\r\n            <div className=\"text-3xl\">📊</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Quick Actions */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Quick Actions</h3>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {quickActions.map((action, index) => (\r\n              <Link\r\n                key={index}\r\n                to={action.link}\r\n                className=\"block p-4 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`w-10 h-10 rounded-lg ${action.color} flex items-center justify-center text-xl`}>\r\n                    {action.icon}\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">{action.title}</h4>\r\n                    <p className=\"text-sm text-gray-400\">{action.description}</p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Activity */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Recent Activity</h3>\r\n          <div className=\"space-y-3\">\r\n            {stats.recentActivity.length > 0 ? (\r\n              stats.recentActivity.map((activity, index) => (\r\n                <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-700 rounded-lg\">\r\n                  <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-sm\">\r\n                    📝\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"font-medium\">{activity.title}</p>\r\n                    <p className=\"text-sm text-gray-400\">\r\n                      {activity.platform} • {activity.date}\r\n                    </p>\r\n                    <p className=\"text-xs text-green-400\">\r\n                      {activity.engagement} engagements\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-400\">\r\n                <div className=\"text-4xl mb-2\">📝</div>\r\n                <p>No recent activity</p>\r\n                <p className=\"text-sm\">Start creating content to see activity here</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Platform Status */}\r\n      <div className=\"mt-8 bg-gray-800 rounded-lg p-6\">\r\n        <h3 className=\"text-xl font-semibold mb-4\">Platform Status</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n          {['Instagram', 'TikTok', 'YouTube', 'Twitter', 'LinkedIn', 'Facebook'].map((platform, index) => (\r\n            <div key={index} className=\"text-center p-4 bg-gray-700 rounded-lg\">\r\n              <div className=\"text-2xl mb-2\">\r\n                {platform === 'Instagram' && '📷'}\r\n                {platform === 'TikTok' && '🎵'}\r\n                {platform === 'YouTube' && '📺'}\r\n                {platform === 'Twitter' && '🐦'}\r\n                {platform === 'LinkedIn' && '💼'}\r\n                {platform === 'Facebook' && '📘'}\r\n              </div>\r\n              <p className=\"font-medium\">{platform}</p>\r\n              <p className=\"text-xs text-gray-400\">Connected</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Generator() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [userPlan, setUserPlan] = useState('Free');\r\n  const [remainingFree, setRemainingFree] = useState(2);\r\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\r\n  const [selectedMode, setSelectedMode] = useState('chat');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const modes = [\r\n    { id: 'chat', name: '💬 Chat', description: 'AI-powered conversation' },\r\n    { id: 'video', name: '🎬 Video', description: 'Generate video scripts' },\r\n    { id: 'social', name: '📱 Social', description: 'Social media content' },\r\n    { id: 'twitch', name: '🎮 Twitch', description: 'Streaming content' },\r\n    { id: 'clips', name: '✂️ Clips', description: 'Video clip generation' }\r\n  ];\r\n\r\n  const suggestions = [\r\n    \"Create a viral TikTok video script about productivity tips\",\r\n    \"Generate a YouTube video script for a product review\",\r\n    \"Write a Twitch stream intro for a gaming channel\",\r\n    \"Create Instagram Reel content for fitness motivation\",\r\n    \"Generate a Twitter thread about AI technology\",\r\n    \"Make a TikTok clip for cooking tutorial\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadUserPlan();\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const loadUserPlan = () => {\r\n    const userSession = localStorage.getItem('userSession');\r\n    if (userSession) {\r\n      const user = JSON.parse(userSession);\r\n      setUserPlan(user.plan || 'Free');\r\n      setRemainingFree(user.remainingFree || 2);\r\n    }\r\n  };\r\n\r\n  const generateResponse = async (userMessage) => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Create a mock user session for demo purposes\r\n      const mockUser = {\r\n        id: 'demo_user',\r\n        email: 'demo@influencore.com',\r\n        plan: userPlan,\r\n        remainingFree: remainingFree\r\n      };\r\n      localStorage.setItem('userSession', JSON.stringify(mockUser));\r\n\r\n      const response = await axios.post(`/api/generate-text`, {\r\n        message: userMessage,\r\n        mode: selectedMode\r\n      });\r\n\r\n      if (response.data.content) {\r\n        const aiMessage = {\r\n          id: Date.now(),\r\n          type: 'ai',\r\n          content: response.data.content,\r\n          timestamp: new Date().toISOString(),\r\n          mode: selectedMode\r\n        };\r\n\r\n        setMessages(prev => [...prev, aiMessage]);\r\n        \r\n        // Update remaining free generations\r\n        if (response.data.remainingFree !== undefined) {\r\n          setRemainingFree(response.data.remainingFree);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err.response?.data?.upgradeRequired) {\r\n        setShowUpgradeModal(true);\r\n      } else {\r\n        // Fallback response for demo\r\n        const fallbackResponse = getFallbackResponse(userMessage, selectedMode);\r\n        const aiMessage = {\r\n          id: Date.now(),\r\n          type: 'ai',\r\n          content: fallbackResponse,\r\n          timestamp: new Date().toISOString(),\r\n          mode: selectedMode\r\n        };\r\n        setMessages(prev => [...prev, aiMessage]);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFallbackResponse = (message, mode) => {\r\n    const responses = {\r\n      chat: `Here's a helpful response to \"${message}\":\\n\\nI understand you're looking for assistance. As an AI content generator, I can help you create engaging content across various platforms. What specific type of content would you like to generate?`,\r\n      video: `🎬 VIDEO SCRIPT:\\n\\nBased on your request \"${message}\", here's a video script:\\n\\nINTRO (0-10s): \"Hey everyone! Today we're going to...\"\\n\\nMAIN CONTENT (10s-2min): Detailed explanation and demonstration\\n\\nCONCLUSION (2min-2:30s): \"Don't forget to like and subscribe!\"\\n\\n#VideoScript #ContentCreation`,\r\n      social: `📱 SOCIAL MEDIA CONTENT:\\n\\n\"${message}\"\\n\\n✨ Perfect for your social media! Here's an engaging post:\\n\\n\"🚀 Ready to level up your game? This is the secret weapon you've been waiting for! 💪\\n\\n#GameChanger #LevelUp #ContentCreation\"`,\r\n      twitch: `🎮 TWITCH CONTENT:\\n\\n\"${message}\"\\n\\nHere's your Twitch stream content:\\n\\n\"🔥 LIVE NOW: Epic gaming session! Join the fun and let's dominate together! 🎮\\n\\nChat with us and share your gaming tips! #Twitch #Gaming #LiveStream\"`,\r\n      clips: `✂️ VIDEO CLIP:\\n\\n\"${message}\"\\n\\n🎬 CLIP SCRIPT:\\n\\nHOOK (0-3s): \"You won't believe what just happened...\"\\n\\nCONTENT (3-15s): Show the exciting moment\\n\\nCTA (15-20s): \"Tap to see more!\"\\n\\n#ViralClip #Trending #ContentCreation`\r\n    };\r\n    \r\n    return responses[mode] || responses.chat;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim() || loading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: input,\r\n      timestamp: new Date().toISOString(),\r\n      mode: selectedMode\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    \r\n    await generateResponse(input);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setInput(suggestion);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 border-b border-gray-700 p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <h1 className=\"text-xl font-bold text-white\">🎯 Influencore AI</h1>\r\n            <div className=\"flex space-x-2\">\r\n              {modes.map((mode) => (\r\n                <button\r\n                  key={mode.id}\r\n                  onClick={() => setSelectedMode(mode.id)}\r\n                  className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                    selectedMode === mode.id\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  {mode.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Freemium Status */}\r\n          {userPlan === 'Free' && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-sm text-gray-300\">{remainingFree} free generations</span>\r\n              <button\r\n                onClick={() => setShowUpgradeModal(true)}\r\n                className=\"px-3 py-1 bg-green-600 rounded text-sm hover:bg-green-700 transition-colors\"\r\n              >\r\n                Upgrade\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {messages.length === 0 && (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"text-6xl mb-4\">🎯</div>\r\n            <h2 className=\"text-2xl font-bold text-white mb-2\">Welcome to Influencore AI</h2>\r\n            <p className=\"text-gray-400 mb-6\">Generate amazing content for social media, videos, and more!</p>\r\n            \r\n            {/* Suggestions */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 max-w-2xl mx-auto\">\r\n              {suggestions.map((suggestion, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleSuggestionClick(suggestion)}\r\n                  className=\"p-3 bg-gray-800 rounded-lg text-left hover:bg-gray-700 transition-colors border border-gray-700\"\r\n                >\r\n                  <p className=\"text-white text-sm\">{suggestion}</p>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Messages */}\r\n        {messages.map((message) => (\r\n          <div\r\n            key={message.id}\r\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div\r\n              className={`max-w-3xl rounded-lg p-4 ${\r\n                message.type === 'user'\r\n                  ? 'bg-blue-600 text-white'\r\n                  : 'bg-gray-800 text-gray-100'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start space-x-3\">\r\n                {message.type === 'ai' && (\r\n                  <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-sm font-bold\">\r\n                    AI\r\n                  </div>\r\n                )}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"whitespace-pre-wrap\">{message.content}</div>\r\n                  <div className=\"text-xs text-gray-400 mt-2\">\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {loading && (\r\n          <div className=\"flex justify-start\">\r\n            <div className=\"bg-gray-800 rounded-lg p-4 max-w-3xl\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-sm font-bold\">\r\n                  AI\r\n                </div>\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"bg-gray-800 border-t border-gray-700 p-4\">\r\n        <form onSubmit={handleSubmit} className=\"flex space-x-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Ask me to generate ${selectedMode === 'video' ? 'video scripts' : selectedMode === 'social' ? 'social media content' : selectedMode === 'twitch' ? 'Twitch content' : selectedMode === 'clips' ? 'video clips' : 'content'}...`}\r\n            className=\"flex-1 p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white placeholder-gray-400\"\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading || !input.trim()}\r\n            className=\"px-6 py-3 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? 'Generating...' : 'Send'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Upgrade Modal */}\r\n      {showUpgradeModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg p-6 max-w-md mx-4\">\r\n            <h3 className=\"text-xl font-bold mb-4\">💎 Upgrade Required</h3>\r\n            <p className=\"text-gray-300 mb-4\">\r\n              You've reached your free limit. Upgrade to continue generating amazing content!\r\n            </p>\r\n            <div className=\"space-y-3 mb-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-green-400\">✓</span>\r\n                <span className=\"text-sm\">Unlimited AI generations</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-green-400\">✓</span>\r\n                <span className=\"text-sm\">Video script generation</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-green-400\">✓</span>\r\n                <span className=\"text-sm\">Twitch & streaming content</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-green-400\">✓</span>\r\n                <span className=\"text-sm\">Video clip creation</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => setShowUpgradeModal(false)}\r\n                className=\"flex-1 px-4 py-2 bg-gray-600 rounded hover:bg-gray-700 transition-colors\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setShowUpgradeModal(false);\r\n                  window.location.href = '/pricing';\r\n                }}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition-colors\"\r\n              >\r\n                View Plans\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function VideoClipper() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [processingStep, setProcessingStep] = useState('');\r\n  const [clips, setClips] = useState([]);\r\n\r\n  const processingSteps = [\r\n    'Analyzing video content...',\r\n    'Identifying viral moments...',\r\n    'Generating AI clips...',\r\n    'Adding captions and effects...',\r\n    'Optimizing for platforms...',\r\n    'Finalizing clips...'\r\n  ];\r\n\r\n  const handleVideoSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!videoUrl.trim()) return;\r\n    \r\n    setIsProcessing(true);\r\n    setProcessingStep('Starting video analysis...');\r\n    \r\n    // Simulate processing steps\r\n    for (let i = 0; i < processingSteps.length; i++) {\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      setProcessingStep(processingSteps[i]);\r\n    }\r\n    \r\n    // Generate mock clips\r\n    const mockClips = [\r\n      {\r\n        id: 1,\r\n        title: 'Viral Moment #1',\r\n        duration: '0:15',\r\n        platform: 'TikTok',\r\n        thumbnail: '🎬',\r\n        description: 'High-energy opening that hooks viewers immediately'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Viral Moment #2',\r\n        duration: '0:20',\r\n        platform: 'Instagram',\r\n        thumbnail: '📱',\r\n        description: 'Perfect for Instagram Reels with trending music'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Viral Moment #3',\r\n        duration: '0:12',\r\n        platform: 'YouTube',\r\n        thumbnail: '📺',\r\n        description: 'YouTube Shorts optimized for maximum engagement'\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Viral Moment #4',\r\n        duration: '0:18',\r\n        platform: 'TikTok',\r\n        thumbnail: '🎬',\r\n        description: 'Comedy moment that will go viral'\r\n      },\r\n      {\r\n        id: 5,\r\n        title: 'Viral Moment #5',\r\n        duration: '0:25',\r\n        platform: 'Instagram',\r\n        thumbnail: '📱',\r\n        description: 'Educational content perfect for Instagram'\r\n      }\r\n    ];\r\n    \r\n    setClips(mockClips);\r\n    setIsProcessing(false);\r\n    setProcessingStep('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 border-b border-gray-700 p-4\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <h1 className=\"text-2xl font-bold\">🎬 Video Clipper</h1>\r\n          <p className=\"text-gray-400\">Turn any video into viral clips with AI</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* Video Upload */}\r\n        <div className=\"bg-gray-800 rounded-lg p-8 border border-gray-700 mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-6\">Drop a video link</h2>\r\n          <form onSubmit={handleVideoSubmit} className=\"space-y-4\">\r\n            <input\r\n              type=\"url\"\r\n              value={videoUrl}\r\n              onChange={(e) => setVideoUrl(e.target.value)}\r\n              placeholder=\"https://youtube.com/watch?v=...\"\r\n              className=\"w-full p-4 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white placeholder-gray-400\"\r\n              disabled={isProcessing}\r\n            />\r\n            <div className=\"text-sm text-gray-400\">\r\n              Supported platforms: YouTube, Google Drive, Vimeo, Zoom, Rumble, Twitch, Facebook, LinkedIn, Twitter, Loom, Riverside, StreamYard\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isProcessing || !videoUrl.trim()}\r\n              className=\"px-8 py-4 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-lg font-semibold\"\r\n            >\r\n              {isProcessing ? 'Processing...' : 'Generate Clips'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Processing Status */}\r\n        {isProcessing && (\r\n          <div className=\"bg-gray-800 rounded-lg p-8 border border-gray-700 mb-8\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-4xl mb-4\">⚡</div>\r\n              <h3 className=\"text-xl font-bold mb-4\">AI is processing your video</h3>\r\n              <p className=\"text-gray-400 mb-6\">{processingStep}</p>\r\n              <div className=\"w-full bg-gray-700 rounded-full h-2\">\r\n                <div className=\"bg-blue-600 h-2 rounded-full animate-pulse\" style={{ width: '60%' }}></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Generated Clips */}\r\n        {clips.length > 0 && (\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-bold\">Generated Clips ({clips.length})</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {clips.map((clip) => (\r\n                <div key={clip.id} className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <div className=\"text-3xl\">{clip.thumbnail}</div>\r\n                    <div className=\"flex space-x-2\">\r\n                      <span className=\"px-2 py-1 bg-blue-600 rounded text-xs\">{clip.platform}</span>\r\n                      <span className=\"px-2 py-1 bg-gray-600 rounded text-xs\">{clip.duration}</span>\r\n                    </div>\r\n                  </div>\r\n                  <h3 className=\"font-bold mb-2\">{clip.title}</h3>\r\n                  <p className=\"text-gray-400 text-sm mb-4\">{clip.description}</p>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button className=\"flex-1 px-3 py-2 bg-blue-600 rounded text-sm hover:bg-blue-700 transition-colors\">\r\n                      Preview\r\n                    </button>\r\n                    <button className=\"flex-1 px-3 py-2 bg-green-600 rounded text-sm hover:bg-green-700 transition-colors\">\r\n                      Download\r\n                    </button>\r\n                    <button className=\"flex-1 px-3 py-2 bg-purple-600 rounded text-sm hover:bg-purple-700 transition-colors\">\r\n                      Publish\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Features */}\r\n        <div className=\"mt-16\">\r\n          <h2 className=\"text-2xl font-bold mb-8\">AI-Powered Features</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n              <div className=\"text-3xl mb-4\">✂️</div>\r\n              <h3 className=\"font-bold mb-2\">Smart Clipping</h3>\r\n              <p className=\"text-gray-400 text-sm\">AI identifies the most engaging moments in your video</p>\r\n            </div>\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n              <div className=\"text-3xl mb-4\">🎬</div>\r\n              <h3 className=\"font-bold mb-2\">Auto Captions</h3>\r\n              <p className=\"text-gray-400 text-sm\">Generate accurate captions with 97% accuracy</p>\r\n            </div>\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n              <div className=\"text-3xl mb-4\">📱</div>\r\n              <h3 className=\"font-bold mb-2\">Multi-Platform</h3>\r\n              <p className=\"text-gray-400 text-sm\">Optimize for TikTok, Instagram, YouTube, and more</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","// API Configuration\r\nconst API_CONFIG = {\r\n  // Development (local backend)\r\n  development: {\r\n    baseURL: 'http://localhost:3000',\r\n    apiPrefix: '/api'\r\n  },\r\n  // Production (deployed backend)\r\n  production: {\r\n    baseURL: process.env.VITE_API_URL || 'https://backend-9g44.onrender.com', // Your deployed backend\r\n    apiPrefix: '/api'\r\n  }\r\n};\r\n\r\n// Get current environment\r\nconst environment = import.meta.env.MODE || 'development';\r\nconst config = API_CONFIG[environment];\r\n\r\n// Create axios instance with base configuration\r\nimport axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: config.baseURL,\r\n  timeout: 30000, // 30 seconds\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor for authentication\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\nexport { config }; ","import React, { useState, useEffect } from 'react';\r\nimport apiClient from './config/api.js';\r\n\r\nexport default function AdvancedVideoGenerator() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [selectedModel, setSelectedModel] = useState('veo3');\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [generatedVideo, setGeneratedVideo] = useState(null);\r\n  const [models, setModels] = useState([]);\r\n  const [capabilities, setCapabilities] = useState({});\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [options, setOptions] = useState({\r\n    duration: 10,\r\n    fps: 24,\r\n    resolution: '1920x1080',\r\n    style: 'cinematic',\r\n    quality: 'high'\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchModels();\r\n  }, []);\r\n\r\n  const fetchModels = async () => {\r\n    try {\r\n      // Use real backend API\r\n      const response = await apiClient.get('/api/video-models');\r\n      setModels(response.data.models);\r\n      setCapabilities(response.data.capabilities);\r\n    } catch (error) {\r\n      console.error('Failed to fetch models:', error);\r\n    }\r\n  };\r\n\r\n  const generateVideo = async () => {\r\n    if (!prompt.trim()) return;\r\n\r\n    setIsGenerating(true);\r\n    setGeneratedVideo(null);\r\n\r\n    try {\r\n      let endpoint = '';\r\n      let requestData = { prompt, options };\r\n\r\n      switch (selectedModel) {\r\n        case 'veo3':\r\n          endpoint = '/api/generate-veo3-video';\r\n          break;\r\n        case 'sora':\r\n          endpoint = '/api/generate-sora-video';\r\n          break;\r\n        case 'viral':\r\n          endpoint = '/api/generate-viral-short';\r\n          break;\r\n        case 'image-to-video':\r\n          endpoint = '/api/generate-video-from-image';\r\n          requestData = { imageUrl, prompt, options };\r\n          break;\r\n        default:\r\n          endpoint = '/api/generate-veo3-video';\r\n      }\r\n\r\n      // Use real backend API\r\n      const response = await apiClient.post(endpoint, requestData);\r\n      setGeneratedVideo(response.data);\r\n    } catch (error) {\r\n      console.error('Video generation failed:', error);\r\n      alert('Video generation failed. Please try again.');\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const getModelInfo = (modelKey) => {\r\n    return capabilities[modelKey] || {\r\n      name: modelKey,\r\n      capabilities: ['Text-to-video'],\r\n      maxDuration: 10,\r\n      resolutions: ['1920x1080']\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 border-b border-gray-700 p-4\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <h1 className=\"text-3xl font-bold\">🎬 Advanced Video Generator</h1>\r\n          <p className=\"text-gray-400\">Google Veo 3 & Sora-level video generation</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* Model Selection */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700 mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Choose AI Model</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {models.map((model) => {\r\n              const info = getModelInfo(model);\r\n              return (\r\n                <div\r\n                  key={model}\r\n                  className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\r\n                    selectedModel === model\r\n                      ? 'border-blue-500 bg-blue-900/20'\r\n                      : 'border-gray-600 hover:border-gray-500'\r\n                  }`}\r\n                  onClick={() => setSelectedModel(model)}\r\n                >\r\n                  <h3 className=\"font-bold text-lg mb-2\">{info.name}</h3>\r\n                  <div className=\"text-sm text-gray-400 mb-2\">\r\n                    <div>Max Duration: {info.maxDuration}s</div>\r\n                    <div>Resolutions: {info.resolutions.join(', ')}</div>\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {info.capabilities.join(', ')}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Input Section */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700 mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Video Generation</h2>\r\n          \r\n          {/* Prompt Input */}\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-sm font-medium mb-2\">Video Prompt</label>\r\n            <textarea\r\n              value={prompt}\r\n              onChange={(e) => setPrompt(e.target.value)}\r\n              placeholder=\"Describe the video you want to generate... (e.g., 'A cinematic shot of a futuristic city at sunset with flying cars')\"\r\n              className=\"w-full p-4 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white placeholder-gray-400\"\r\n              rows=\"4\"\r\n            />\r\n          </div>\r\n\r\n          {/* Image URL Input (for image-to-video) */}\r\n          {selectedModel === 'image-to-video' && (\r\n            <div className=\"mb-6\">\r\n              <label className=\"block text-sm font-medium mb-2\">Image URL</label>\r\n              <input\r\n                type=\"url\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                placeholder=\"https://example.com/image.jpg\"\r\n                className=\"w-full p-4 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white placeholder-gray-400\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Options */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Duration (seconds)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={options.duration}\r\n                onChange={(e) => setOptions({...options, duration: parseInt(e.target.value)})}\r\n                min=\"1\"\r\n                max=\"60\"\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">FPS</label>\r\n              <select\r\n                value={options.fps}\r\n                onChange={(e) => setOptions({...options, fps: parseInt(e.target.value)})}\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white\"\r\n              >\r\n                <option value=\"24\">24 FPS</option>\r\n                <option value=\"30\">30 FPS</option>\r\n                <option value=\"60\">60 FPS</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Resolution</label>\r\n              <select\r\n                value={options.resolution}\r\n                onChange={(e) => setOptions({...options, resolution: e.target.value})}\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white\"\r\n              >\r\n                <option value=\"1920x1080\">1920x1080 (HD)</option>\r\n                <option value=\"1280x720\">1280x720 (HD)</option>\r\n                <option value=\"3840x2160\">3840x2160 (4K)</option>\r\n                <option value=\"1080x1920\">1080x1920 (Vertical)</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Quality</label>\r\n              <select\r\n                value={options.quality}\r\n                onChange={(e) => setOptions({...options, quality: e.target.value})}\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none text-white\"\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"ultra-high\">Ultra High</option>\r\n                <option value=\"medium\">Medium</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Generate Button */}\r\n          <button\r\n            onClick={generateVideo}\r\n            disabled={isGenerating || !prompt.trim()}\r\n            className=\"w-full py-4 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-lg font-semibold\"\r\n          >\r\n            {isGenerating ? '🎬 Generating Video...' : '🎬 Generate Video'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Generated Video */}\r\n        {generatedVideo && (\r\n          <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Generated Video</h2>\r\n            \r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              {/* Video Player */}\r\n              <div>\r\n                <video\r\n                  controls\r\n                  className=\"w-full rounded-lg\"\r\n                  src={generatedVideo.video.videoUrl}\r\n                >\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </div>\r\n\r\n              {/* Video Info */}\r\n              <div>\r\n                <h3 className=\"text-xl font-bold mb-4\">Video Details</h3>\r\n                <div className=\"space-y-2 text-sm\">\r\n                  <div><strong>Model:</strong> {generatedVideo.video.model}</div>\r\n                  <div><strong>Duration:</strong> {generatedVideo.video.duration}s</div>\r\n                  <div><strong>Resolution:</strong> {generatedVideo.video.resolution}</div>\r\n                  <div><strong>Prompt:</strong> {generatedVideo.video.prompt}</div>\r\n                  {generatedVideo.video.note && (\r\n                    <div className=\"text-yellow-400\"><strong>Note:</strong> {generatedVideo.video.note}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"mt-6 space-y-2\">\r\n                  <button\r\n                    onClick={() => window.open(generatedVideo.video.videoUrl, '_blank')}\r\n                    className=\"w-full py-2 bg-green-600 rounded hover:bg-green-700 transition-colors\"\r\n                  >\r\n                    📥 Download Video\r\n                  </button>\r\n                  <button\r\n                    onClick={() => navigator.clipboard.writeText(generatedVideo.video.videoUrl)}\r\n                    className=\"w-full py-2 bg-purple-600 rounded hover:bg-purple-700 transition-colors\"\r\n                  >\r\n                    📋 Copy Video URL\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Usage Info */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700 mt-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Usage Information</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n            <div>\r\n              <div className=\"font-bold\">Remaining Free Generations</div>\r\n              <div className=\"text-blue-400\">{generatedVideo?.remainingFree || 2}</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"font-bold\">Current Plan</div>\r\n              <div className=\"text-green-400\">{generatedVideo?.plan || 'Free'}</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"font-bold\">Total Used</div>\r\n              <div className=\"text-gray-400\">{generatedVideo?.usage?.aiGenerations || 0}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Library() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterPlatform, setFilterPlatform] = useState('all');\r\n\r\n  useEffect(() => {\r\n    loadPosts();\r\n    // Add sample data for demo if no posts exist\r\n    const savedPosts = localStorage.getItem('libraryPosts');\r\n    if (!savedPosts || JSON.parse(savedPosts).length === 0) {\r\n      addSamplePosts();\r\n    }\r\n  }, []);\r\n\r\n  const loadPosts = () => {\r\n    const savedPosts = localStorage.getItem('libraryPosts');\r\n    if (savedPosts) {\r\n      setPosts(JSON.parse(savedPosts));\r\n    }\r\n  };\r\n\r\n  const savePosts = (newPosts) => {\r\n    localStorage.setItem('libraryPosts', JSON.stringify(newPosts));\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  const addPost = (post) => {\r\n    const newPost = {\r\n      id: Date.now(),\r\n      ...post,\r\n      createdAt: new Date().toISOString(),\r\n      tags: post.tags || []\r\n    };\r\n    savePosts([newPost, ...posts]);\r\n  };\r\n\r\n  const deletePost = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this post?')) {\r\n      savePosts(posts.filter(post => post.id !== id));\r\n      if (selectedPost?.id === id) {\r\n        setSelectedPost(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updatePost = (id, updates) => {\r\n    const updatedPosts = posts.map(post => \r\n      post.id === id ? { ...post, ...updates } : post\r\n    );\r\n    savePosts(updatedPosts);\r\n    if (selectedPost?.id === id) {\r\n      setSelectedPost({ ...selectedPost, ...updates });\r\n    }\r\n  };\r\n\r\n  const filteredPosts = posts.filter(post => {\r\n    const matchesSearch = post.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         post.content?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         post.tags?.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    const matchesPlatform = filterPlatform === 'all' || post.platform === filterPlatform;\r\n    return matchesSearch && matchesPlatform;\r\n  });\r\n\r\n  const exportPosts = () => {\r\n    const dataStr = JSON.stringify(posts, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'social-media-posts.json';\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const addSamplePosts = () => {\r\n    const samplePosts = [\r\n      {\r\n        id: Date.now() - 1000,\r\n        title: \"Viral TikTok Product Launch\",\r\n        content: \"🎯 POV: You just discovered our new product and your life is about to change forever...\\n\\nThis isn't just another product - it's THE product that's going viral right now! 🔥\\n\\n• Game-changing features\\n• Affordable luxury\\n• Instant results\\n\\nDon't be the last to know! #TikTokMadeMeBuyIt #ViralProduct #MustHave\",\r\n        platform: \"TikTok\",\r\n        createdAt: new Date(Date.now() - 86400000).toISOString(),\r\n        tags: [\"viral\", \"product launch\", \"tiktok\", \"trending\"]\r\n      },\r\n      {\r\n        id: Date.now() - 2000,\r\n        title: \"Instagram Lifestyle Post\",\r\n        content: \"✨ Transform your routine with our premium product - because you deserve the best! 🌟\\n\\nThis isn't just another product, it's a lifestyle upgrade that's changing everything:\\n\\n💎 Premium quality\\n💎 Professional results\\n💎 Affordable luxury\\n\\nReady to level up? Swipe up to discover the magic! ✨\\n\\n#Lifestyle #Transformation #Premium #Upgrade\",\r\n        platform: \"Instagram\",\r\n        createdAt: new Date(Date.now() - 172800000).toISOString(),\r\n        tags: [\"lifestyle\", \"premium\", \"transformation\", \"instagram\"]\r\n      },\r\n      {\r\n        id: Date.now() - 3000,\r\n        title: \"YouTube Product Review\",\r\n        content: \"🎬 NEW: Product Review - This might be the game-changer you've been looking for!\\n\\nIn this video, I'm testing our latest product and sharing everything you need to know:\\n\\n⏰ Timestamps:\\n0:00 - Introduction\\n1:30 - Unboxing\\n3:45 - First impressions\\n6:20 - Testing phase\\n10:15 - Results\\n12:30 - Final verdict\\n\\nIs it worth the hype? Let's find out together!\\n\\n#Review #NewProduct #Testing #GameChanger\",\r\n        platform: \"YouTube\",\r\n        createdAt: new Date(Date.now() - 259200000).toISOString(),\r\n        tags: [\"review\", \"youtube\", \"testing\", \"gamechanger\"]\r\n      },\r\n      {\r\n        id: Date.now() - 4000,\r\n        title: \"Twitter Hot Take\",\r\n        content: \"Just tried our new product and... 🤯\\n\\nGame. Changer.\\n\\nThis is what we've been waiting for. Period.\\n\\n#Innovation #Tech #GameChanger #MustHave\",\r\n        platform: \"Twitter\",\r\n        createdAt: new Date(Date.now() - 345600000).toISOString(),\r\n        tags: [\"hot take\", \"twitter\", \"innovation\", \"tech\"]\r\n      }\r\n    ];\r\n    savePosts(samplePosts);\r\n  };\r\n\r\n  const importPosts = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const importedPosts = JSON.parse(e.target.result);\r\n          savePosts([...posts, ...importedPosts]);\r\n          alert('Posts imported successfully!');\r\n        } catch (error) {\r\n          alert('Invalid JSON file');\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-7xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold\">Content Library</h2>\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".json\"\r\n            onChange={importPosts}\r\n            className=\"hidden\"\r\n            id=\"import-posts\"\r\n          />\r\n          <label\r\n            htmlFor=\"import-posts\"\r\n            className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors cursor-pointer\"\r\n          >\r\n            📁 Import\r\n          </label>\r\n          <button\r\n            onClick={exportPosts}\r\n            className=\"px-4 py-2 bg-green-600 rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            📤 Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search and Filter */}\r\n      <div className=\"bg-gray-800 rounded-lg p-4 mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search posts...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"p-2 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n          />\r\n          <select\r\n            value={filterPlatform}\r\n            onChange={(e) => setFilterPlatform(e.target.value)}\r\n            className=\"p-2 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n          >\r\n            <option value=\"all\">All Platforms</option>\r\n            <option value=\"TikTok\">TikTok</option>\r\n            <option value=\"Instagram\">Instagram</option>\r\n            <option value=\"YouTube\">YouTube</option>\r\n            <option value=\"Twitter\">Twitter</option>\r\n          </select>\r\n          <div className=\"text-sm text-gray-400\">\r\n            {filteredPosts.length} of {posts.length} posts\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Posts List */}\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"bg-gray-800 rounded-lg p-4\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Posts</h3>\r\n            <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n              {filteredPosts.length === 0 ? (\r\n                <p className=\"text-gray-400 text-center py-8\">No posts found</p>\r\n              ) : (\r\n                filteredPosts.map(post => (\r\n                  <div\r\n                    key={post.id}\r\n                    className={`p-3 rounded-lg cursor-pointer transition-colors ${\r\n                      selectedPost?.id === post.id \r\n                        ? 'bg-blue-600' \r\n                        : 'bg-gray-700 hover:bg-gray-600'\r\n                    }`}\r\n                    onClick={() => setSelectedPost(post)}\r\n                  >\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div className=\"flex-1\">\r\n                        <h4 className=\"font-medium truncate\">{post.title || 'Untitled'}</h4>\r\n                        <p className=\"text-sm text-gray-400 truncate\">{post.content}</p>\r\n                        <div className=\"flex items-center space-x-2 mt-2\">\r\n                          <span className=\"text-xs bg-gray-600 px-2 py-1 rounded\">{post.platform}</span>\r\n                          <span className=\"text-xs text-gray-400\">\r\n                            {new Date(post.createdAt).toLocaleDateString()}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deletePost(post.id);\r\n                        }}\r\n                        className=\"text-red-400 hover:text-red-300 ml-2\"\r\n                      >\r\n                        🗑️\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Post Details */}\r\n        <div className=\"lg:col-span-2\">\r\n          {selectedPost ? (\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <div className=\"flex justify-between items-start mb-4\">\r\n                <h3 className=\"text-xl font-semibold\">Post Details</h3>\r\n                <button\r\n                  onClick={() => setSelectedPost(null)}\r\n                  className=\"text-gray-400 hover:text-white\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedPost.title || ''}\r\n                    onChange={(e) => updatePost(selectedPost.id, { title: e.target.value })}\r\n                    className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Content</label>\r\n                  <textarea\r\n                    value={selectedPost.content || ''}\r\n                    onChange={(e) => updatePost(selectedPost.id, { content: e.target.value })}\r\n                    rows=\"6\"\r\n                    className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Platform</label>\r\n                    <select\r\n                      value={selectedPost.platform || ''}\r\n                      onChange={(e) => updatePost(selectedPost.id, { platform: e.target.value })}\r\n                      className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                    >\r\n                      <option value=\"\">Select Platform</option>\r\n                      <option value=\"TikTok\">TikTok</option>\r\n                      <option value=\"Instagram\">Instagram</option>\r\n                      <option value=\"YouTube\">YouTube</option>\r\n                      <option value=\"Twitter\">Twitter</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Created</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={new Date(selectedPost.createdAt).toLocaleString()}\r\n                      disabled\r\n                      className=\"w-full p-3 bg-gray-600 rounded-lg border border-gray-500 text-gray-400\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Tags</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedPost.tags?.join(', ') || ''}\r\n                    onChange={(e) => updatePost(selectedPost.id, { \r\n                      tags: e.target.value.split(',').map(tag => tag.trim()).filter(tag => tag)\r\n                    })}\r\n                    placeholder=\"Enter tags separated by commas\"\r\n                    className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex space-x-2 pt-4\">\r\n                  <button\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(selectedPost.content);\r\n                      alert('Content copied to clipboard!');\r\n                    }}\r\n                    className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                  >\r\n                    📋 Copy Content\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      const postData = JSON.stringify(selectedPost, null, 2);\r\n                      navigator.clipboard.writeText(postData);\r\n                      alert('Post data copied to clipboard!');\r\n                    }}\r\n                    className=\"px-4 py-2 bg-gray-600 rounded-lg hover:bg-gray-700 transition-colors\"\r\n                  >\r\n                    📄 Copy JSON\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"bg-gray-800 rounded-lg p-6 flex items-center justify-center\">\r\n              <p className=\"text-gray-400\">Select a post to view details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function ProfileSettings() {\r\n  const [profile, setProfile] = useState({\r\n    name: '',\r\n    email: '',\r\n    bio: '',\r\n    avatar: null,\r\n    avatarPreview: null\r\n  });\r\n  const [theme, setTheme] = useState('dark');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Load saved profile data\r\n    const savedProfile = localStorage.getItem('userProfile');\r\n    const savedTheme = localStorage.getItem('theme') || 'dark';\r\n    \r\n    if (savedProfile) {\r\n      setProfile(JSON.parse(savedProfile));\r\n    }\r\n    setTheme(savedTheme);\r\n  }, []);\r\n\r\n  const handleAvatarChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setProfile(prev => ({\r\n          ...prev,\r\n          avatar: file,\r\n          avatarPreview: e.target.result\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfile(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n    setTheme(newTheme);\r\n    localStorage.setItem('theme', newTheme);\r\n    document.documentElement.classList.toggle('dark');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('userProfile', JSON.stringify(profile));\r\n      \r\n      alert('Profile updated successfully!');\r\n    } catch (error) {\r\n      alert('Failed to update profile');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6\">Profile Settings</h2>\r\n      \r\n      <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-xl font-semibold\">Theme</h3>\r\n          <button\r\n            onClick={handleThemeToggle}\r\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <span>{theme === 'dark' ? '🌙' : '☀️'}</span>\r\n            <span>{theme === 'dark' ? 'Dark' : 'Light'} Mode</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Avatar Upload */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Avatar</h3>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-20 h-20 rounded-full bg-gray-700 flex items-center justify-center overflow-hidden\">\r\n              {profile.avatarPreview ? (\r\n                <img \r\n                  src={profile.avatarPreview} \r\n                  alt=\"Avatar preview\" \r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              ) : (\r\n                <span className=\"text-2xl\">👤</span>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleAvatarChange}\r\n                className=\"hidden\"\r\n                id=\"avatar-upload\"\r\n              />\r\n              <label\r\n                htmlFor=\"avatar-upload\"\r\n                className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors cursor-pointer\"\r\n              >\r\n                Upload Avatar\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Profile Form */}\r\n        <div className=\"bg-gray-800 rounded-lg p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Profile Information</h3>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={profile.name}\r\n                onChange={handleInputChange}\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                placeholder=\"Enter your name\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={profile.email}\r\n                onChange={handleInputChange}\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Bio</label>\r\n              <textarea\r\n                name=\"bio\"\r\n                value={profile.bio}\r\n                onChange={handleInputChange}\r\n                rows=\"4\"\r\n                className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 focus:border-blue-500 focus:outline-none\"\r\n                placeholder=\"Tell us about yourself...\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"px-6 py-3 bg-green-600 rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {isLoading ? 'Saving...' : 'Save Changes'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function SocialConnector() {\r\n  const [connections, setConnections] = useState({});\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [selectedPlatform, setSelectedPlatform] = useState(null);\r\n\r\n  const platforms = [\r\n    {\r\n      id: 'instagram',\r\n      name: 'Instagram',\r\n      icon: '📷',\r\n      color: 'bg-gradient-to-r from-purple-500 to-pink-500',\r\n      description: 'Share photos and stories',\r\n      scopes: ['basic', 'content_publish', 'comments_read']\r\n    },\r\n    {\r\n      id: 'tiktok',\r\n      name: 'TikTok',\r\n      icon: '🎵',\r\n      color: 'bg-gradient-to-r from-black to-gray-800',\r\n      description: 'Create and share short videos',\r\n      scopes: ['user.info.basic', 'video.upload', 'video.publish']\r\n    },\r\n    {\r\n      id: 'youtube',\r\n      name: 'YouTube',\r\n      icon: '📺',\r\n      color: 'bg-gradient-to-r from-red-500 to-red-700',\r\n      description: 'Upload and manage videos',\r\n      scopes: ['youtube.upload', 'youtube.readonly', 'youtube.force-ssl']\r\n    },\r\n    {\r\n      id: 'twitter',\r\n      name: 'Twitter',\r\n      icon: '🐦',\r\n      color: 'bg-gradient-to-r from-blue-400 to-blue-600',\r\n      description: 'Share tweets and threads',\r\n      scopes: ['tweet.read', 'tweet.write', 'users.read']\r\n    },\r\n    {\r\n      id: 'linkedin',\r\n      name: 'LinkedIn',\r\n      icon: '💼',\r\n      color: 'bg-gradient-to-r from-blue-600 to-blue-800',\r\n      description: 'Professional networking',\r\n      scopes: ['r_liteprofile', 'w_member_social', 'r_emailaddress']\r\n    },\r\n    {\r\n      id: 'facebook',\r\n      name: 'Facebook',\r\n      icon: '📘',\r\n      color: 'bg-gradient-to-r from-blue-600 to-blue-800',\r\n      description: 'Share posts and stories',\r\n      scopes: ['public_profile', 'pages_manage_posts', 'pages_read_engagement']\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadConnections();\r\n  }, []);\r\n\r\n  const loadConnections = () => {\r\n    const saved = localStorage.getItem('socialConnections');\r\n    if (saved) {\r\n      setConnections(JSON.parse(saved));\r\n    }\r\n  };\r\n\r\n  const saveConnections = (newConnections) => {\r\n    localStorage.setItem('socialConnections', JSON.stringify(newConnections));\r\n    setConnections(newConnections);\r\n  };\r\n\r\n  const simulateOAuthFlow = async (platform) => {\r\n    setIsConnecting(true);\r\n    setSelectedPlatform(platform);\r\n\r\n    try {\r\n      // Simulate realistic OAuth flow with steps\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      console.log(`Connecting to ${platform.name}...`);\r\n      \r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      console.log(`Authenticating with ${platform.name}...`);\r\n      \r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      console.log(`Fetching user profile from ${platform.name}...`);\r\n      \r\n      // Generate realistic mock data\r\n      const mockUsernames = {\r\n        instagram: ['creative_life', 'lifestyle_blogger', 'content_creator'],\r\n        tiktok: ['viral_creator', 'trending_now', 'content_maker'],\r\n        youtube: ['tech_reviewer', 'lifestyle_channel', 'product_tester'],\r\n        twitter: ['social_expert', 'trend_analyst', 'content_strategist'],\r\n        linkedin: ['professional_networker', 'business_expert', 'industry_leader'],\r\n        facebook: ['social_media_expert', 'community_builder', 'content_creator']\r\n      };\r\n      \r\n      const mockDisplayNames = {\r\n        instagram: ['Creative Life', 'Lifestyle Blogger', 'Content Creator'],\r\n        tiktok: ['Viral Creator', 'Trending Now', 'Content Maker'],\r\n        youtube: ['Tech Reviewer', 'Lifestyle Channel', 'Product Tester'],\r\n        twitter: ['Social Expert', 'Trend Analyst', 'Content Strategist'],\r\n        linkedin: ['Professional Networker', 'Business Expert', 'Industry Leader'],\r\n        facebook: ['Social Media Expert', 'Community Builder', 'Content Creator']\r\n      };\r\n      \r\n      const username = mockUsernames[platform.id]?.[Math.floor(Math.random() * 3)] || `user_${platform.id}`;\r\n      const displayName = mockDisplayNames[platform.id]?.[Math.floor(Math.random() * 3)] || `User ${platform.name}`;\r\n      const followers = Math.floor(Math.random() * 50000) + 1000;\r\n      const following = Math.floor(Math.random() * 500) + 50;\r\n      \r\n      // Simulate successful connection\r\n      const mockConnection = {\r\n        id: platform.id,\r\n        name: platform.name,\r\n        connectedAt: new Date().toISOString(),\r\n        accessToken: `mock_token_${platform.id}_${Date.now()}`,\r\n        refreshToken: `mock_refresh_${platform.id}_${Date.now()}`,\r\n        expiresAt: new Date(Date.now() + 3600000).toISOString(), // 1 hour\r\n        scopes: platform.scopes,\r\n        profile: {\r\n          id: `user_${platform.id}_${Date.now()}`,\r\n          username: username,\r\n          displayName: displayName,\r\n          avatar: `https://via.placeholder.com/150/333/fff?text=${platform.icon}`,\r\n          followers: followers,\r\n          following: following,\r\n          verified: Math.random() > 0.7, // 30% chance of being verified\r\n          bio: `Professional content creator and ${platform.name} expert. Sharing insights and creating engaging content.`\r\n        }\r\n      };\r\n\r\n      const newConnections = { ...connections, [platform.id]: mockConnection };\r\n      saveConnections(newConnections);\r\n      \r\n      alert(`Successfully connected to ${platform.name}!`);\r\n    } catch (error) {\r\n      alert(`Failed to connect to ${platform.name}. Please try again.`);\r\n    } finally {\r\n      setIsConnecting(false);\r\n      setSelectedPlatform(null);\r\n    }\r\n  };\r\n\r\n  const disconnectPlatform = (platformId) => {\r\n    if (window.confirm(`Are you sure you want to disconnect from ${platforms.find(p => p.id === platformId)?.name}?`)) {\r\n      const newConnections = { ...connections };\r\n      delete newConnections[platformId];\r\n      saveConnections(newConnections);\r\n    }\r\n  };\r\n\r\n  const refreshToken = async (platformId) => {\r\n    const connection = connections[platformId];\r\n    if (!connection) return;\r\n\r\n    setIsConnecting(true);\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const updatedConnection = {\r\n        ...connection,\r\n        accessToken: `mock_token_${platformId}_${Date.now()}`,\r\n        expiresAt: new Date(Date.now() + 3600000).toISOString()\r\n      };\r\n      \r\n      const newConnections = { ...connections, [platformId]: updatedConnection };\r\n      saveConnections(newConnections);\r\n      \r\n      alert('Token refreshed successfully!');\r\n    } catch (error) {\r\n      alert('Failed to refresh token');\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const testConnection = async (platformId) => {\r\n    const connection = connections[platformId];\r\n    if (!connection) return;\r\n\r\n    setIsConnecting(true);\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      alert(`Connection to ${connection.name} is working!`);\r\n    } catch (error) {\r\n      alert(`Connection to ${connection.name} failed. Please reconnect.`);\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-6xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6\">Social Media Connections</h2>\r\n      \r\n      {/* Connection Status */}\r\n      <div className=\"bg-gray-800 rounded-lg p-4 mb-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold\">Connection Status</h3>\r\n            <p className=\"text-gray-400\">\r\n              {Object.keys(connections).length} of {platforms.length} platforms connected\r\n            </p>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => {\r\n                const allConnected = platforms.every(p => connections[p.id]);\r\n                if (allConnected) {\r\n                  alert('All platforms are already connected!');\r\n                } else {\r\n                  const unconnected = platforms.filter(p => !connections[p.id]);\r\n                  alert(`Connect to: ${unconnected.map(p => p.name).join(', ')}`);\r\n                }\r\n              }}\r\n              className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              📊 Connection Overview\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Platforms Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {platforms.map(platform => {\r\n          const connection = connections[platform.id];\r\n          const isConnecting = selectedPlatform?.id === platform.id;\r\n\r\n          return (\r\n            <div key={platform.id} className=\"bg-gray-800 rounded-lg p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`w-12 h-12 rounded-lg ${platform.color} flex items-center justify-center text-2xl`}>\r\n                    {platform.icon}\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"text-lg font-semibold\">{platform.name}</h3>\r\n                    <p className=\"text-sm text-gray-400\">{platform.description}</p>\r\n                  </div>\r\n                </div>\r\n                {connection && (\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\r\n                    <span className=\"text-xs text-green-400\">Connected</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {connection ? (\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"bg-gray-700 rounded-lg p-3\">\r\n                    <div className=\"flex items-center space-x-2 mb-2\">\r\n                      <img \r\n                        src={connection.profile.avatar} \r\n                        alt=\"Profile\" \r\n                        className=\"w-8 h-8 rounded-full\"\r\n                      />\r\n                      <div>\r\n                        <p className=\"font-medium\">{connection.profile.displayName}</p>\r\n                        <p className=\"text-xs text-gray-400\">@{connection.profile.username}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-400\">\r\n                      <span>{connection.profile.followers.toLocaleString()} followers</span>\r\n                      <span>{connection.profile.following.toLocaleString()} following</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <button\r\n                      onClick={() => testConnection(platform.id)}\r\n                      disabled={isConnecting}\r\n                      className=\"w-full px-3 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n                    >\r\n                      {isConnecting ? 'Testing...' : '🧪 Test Connection'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => refreshToken(platform.id)}\r\n                      disabled={isConnecting}\r\n                      className=\"w-full px-3 py-2 bg-yellow-600 rounded-lg hover:bg-yellow-700 transition-colors disabled:opacity-50\"\r\n                    >\r\n                      {isConnecting ? 'Refreshing...' : '🔄 Refresh Token'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => disconnectPlatform(platform.id)}\r\n                      className=\"w-full px-3 py-2 bg-red-600 rounded-lg hover:bg-red-700 transition-colors\"\r\n                    >\r\n                      🚫 Disconnect\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"text-xs text-gray-400\">\r\n                    <p>Connected: {new Date(connection.connectedAt).toLocaleDateString()}</p>\r\n                    <p>Expires: {new Date(connection.expiresAt).toLocaleString()}</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"text-sm text-gray-400\">\r\n                    <p className=\"mb-2\">Required permissions:</p>\r\n                    <ul className=\"space-y-1\">\r\n                      {platform.scopes.map(scope => (\r\n                        <li key={scope} className=\"flex items-center space-x-2\">\r\n                          <span className=\"text-green-400\">✓</span>\r\n                          <span>{scope}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    onClick={() => simulateOAuthFlow(platform)}\r\n                    disabled={isConnecting}\r\n                    className={`w-full px-4 py-3 rounded-lg transition-colors disabled:opacity-50 ${\r\n                      platform.color.replace('bg-gradient-to-r', 'bg-gradient-to-r')\r\n                    } hover:opacity-90`}\r\n                  >\r\n                    {isConnecting ? 'Connecting...' : `Connect to ${platform.name}`}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* API Testing Section */}\r\n      {Object.keys(connections).length > 0 && (\r\n        <div className=\"mt-8 bg-gray-800 rounded-lg p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">API Testing</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            <button\r\n              onClick={() => {\r\n                alert('Simulating post creation...\\nThis would create a post on all connected platforms.');\r\n              }}\r\n              className=\"p-4 bg-green-600 rounded-lg hover:bg-green-700 transition-colors\"\r\n            >\r\n              📝 Create Post\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                alert('Simulating analytics fetch...\\nThis would retrieve engagement data from all platforms.');\r\n              }}\r\n              className=\"p-4 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              📊 Get Analytics\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                alert('Simulating content scheduling...\\nThis would schedule posts across all platforms.');\r\n              }}\r\n              className=\"p-4 bg-purple-600 rounded-lg hover:bg-purple-700 transition-colors\"\r\n            >\r\n              ⏰ Schedule Content\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Pricing() {\r\n  const [billingCycle, setBillingCycle] = useState('monthly');\r\n\r\n  const plans = [\r\n    {\r\n      name: 'Free',\r\n      price: 0,\r\n      period: 'forever',\r\n      features: [\r\n        '2 AI content generations',\r\n        '1 social media platform',\r\n        'Basic templates',\r\n        'Content library (10 posts)',\r\n        'Community support'\r\n      ],\r\n      popular: false,\r\n      cta: 'Get Started Free',\r\n      highlight: 'Perfect for trying out'\r\n    },\r\n    {\r\n      name: 'Starter',\r\n      price: billingCycle === 'monthly' ? 19 : 190,\r\n      period: billingCycle === 'monthly' ? 'month' : 'year',\r\n      features: [\r\n        '50 AI content generations per month',\r\n        '3 social media platforms',\r\n        'Advanced templates',\r\n        'Content library (100 posts)',\r\n        'Email support',\r\n        'Export to JSON'\r\n      ],\r\n      popular: false,\r\n      cta: 'Start Free Trial'\r\n    },\r\n    {\r\n      name: 'Professional',\r\n      price: billingCycle === 'monthly' ? 49 : 490,\r\n      period: billingCycle === 'monthly' ? 'month' : 'year',\r\n      features: [\r\n        '500 AI content generations per month',\r\n        'All 6 social media platforms',\r\n        'Advanced templates & customization',\r\n        'Unlimited content library',\r\n        'Priority support',\r\n        'API access',\r\n        'Analytics dashboard',\r\n        'Team collaboration (3 members)',\r\n        'White-label options'\r\n      ],\r\n      popular: true,\r\n      cta: 'Start Free Trial'\r\n    },\r\n    {\r\n      name: 'Enterprise',\r\n      price: billingCycle === 'monthly' ? 199 : 1990,\r\n      period: billingCycle === 'monthly' ? 'month' : 'year',\r\n      features: [\r\n        'Unlimited AI content generations',\r\n        'All social media platforms',\r\n        'Custom AI model training',\r\n        'Advanced analytics & reporting',\r\n        'Dedicated account manager',\r\n        'Custom integrations',\r\n        'Team collaboration (unlimited)',\r\n        'White-label solution',\r\n        'SLA guarantee',\r\n        'On-premise deployment'\r\n      ],\r\n      popular: false,\r\n      cta: 'Contact Sales'\r\n    }\r\n  ];\r\n\r\n  const handleSubscribe = (planName) => {\r\n    // In a real app, this would integrate with Stripe/PayPal\r\n    if (planName === 'Enterprise') {\r\n      window.open('mailto:sales@influencore.com?subject=Enterprise%20Inquiry', '_blank');\r\n    } else {\r\n      // Simulate payment flow\r\n      const paymentUrl = `https://checkout.stripe.com/pay/cs_test_${Math.random().toString(36).substr(2, 9)}`;\r\n      window.open(paymentUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Link to=\"/\" className=\"text-2xl font-bold\">🎯 Influencore</Link>\r\n            <div className=\"flex items-center space-x-6\">\r\n              <Link to=\"/\" className=\"hover:text-blue-400 transition-colors\">Home</Link>\r\n              <Link to=\"/features\" className=\"hover:text-blue-400 transition-colors\">Features</Link>\r\n              <Link to=\"/pricing\" className=\"text-blue-400 font-semibold\">Pricing</Link>\r\n              <Link to=\"/contact\" className=\"hover:text-blue-400 transition-colors\">Contact</Link>\r\n              <Link to=\"/login\" className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\">\r\n                Sign In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hero Section */}\r\n      <div className=\"max-w-7xl mx-auto px-4 py-16\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-5xl font-bold mb-6\">\r\n            Choose Your Plan\r\n          </h1>\r\n          <p className=\"text-xl text-gray-300 mb-8\">\r\n            Scale your social media presence with AI-powered content generation\r\n          </p>\r\n          \r\n          {/* Billing Toggle */}\r\n          <div className=\"flex items-center justify-center space-x-4 mb-8\">\r\n            <span className={`text-sm ${billingCycle === 'monthly' ? 'text-white' : 'text-gray-400'}`}>\r\n              Monthly\r\n            </span>\r\n            <button\r\n              onClick={() => setBillingCycle(billingCycle === 'monthly' ? 'yearly' : 'monthly')}\r\n              className=\"relative inline-flex h-6 w-11 items-center rounded-full bg-gray-700 transition-colors\"\r\n            >\r\n              <span\r\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                  billingCycle === 'yearly' ? 'translate-x-6' : 'translate-x-1'\r\n                }`}\r\n              />\r\n            </button>\r\n            <span className={`text-sm ${billingCycle === 'yearly' ? 'text-white' : 'text-gray-400'}`}>\r\n              Yearly\r\n              <span className=\"ml-1 text-green-400\">(Save 20%)</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pricing Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-7xl mx-auto\">\r\n          {plans.map((plan, index) => (\r\n            <div\r\n              key={index}\r\n              className={`relative bg-gray-800 rounded-lg p-8 ${\r\n                plan.popular ? 'ring-2 ring-blue-500 scale-105' : ''\r\n              } ${plan.name === 'Free' ? 'border-2 border-green-500/30' : ''}`}\r\n            >\r\n              {plan.popular && (\r\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                  <span className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-semibold\">\r\n                    Most Popular\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {plan.name === 'Free' && (\r\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                  <span className=\"bg-green-500 text-white px-4 py-1 rounded-full text-sm font-semibold\">\r\n                    {plan.highlight}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"text-center mb-8\">\r\n                <h3 className=\"text-2xl font-bold mb-4\">{plan.name}</h3>\r\n                <div className=\"mb-6\">\r\n                  {plan.name === 'Free' ? (\r\n                    <span className=\"text-4xl font-bold text-green-400\">Free</span>\r\n                  ) : (\r\n                    <>\r\n                      <span className=\"text-4xl font-bold\">${plan.price}</span>\r\n                      <span className=\"text-gray-400\">/{plan.period}</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <button\r\n                  onClick={() => handleSubscribe(plan.name)}\r\n                  className={`w-full py-3 px-6 rounded-lg font-semibold transition-colors ${\r\n                    plan.name === 'Free'\r\n                      ? 'bg-green-600 hover:bg-green-700'\r\n                      : plan.popular\r\n                      ? 'bg-blue-600 hover:bg-blue-700'\r\n                      : 'bg-gray-700 hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  {plan.cta}\r\n                </button>\r\n              </div>\r\n\r\n              <ul className=\"space-y-4\">\r\n                {plan.features.map((feature, featureIndex) => (\r\n                  <li key={featureIndex} className=\"flex items-start\">\r\n                    <span className=\"text-green-400 mr-3\">✓</span>\r\n                    <span className=\"text-gray-300\">{feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* FAQ Section */}\r\n        <div className=\"mt-24 max-w-4xl mx-auto\">\r\n          <h2 className=\"text-3xl font-bold text-center mb-12\">Frequently Asked Questions</h2>\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">Can I cancel anytime?</h3>\r\n              <p className=\"text-gray-300\">Yes, you can cancel your subscription at any time. No long-term contracts required.</p>\r\n            </div>\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">Do you offer a free plan?</h3>\r\n              <p className=\"text-gray-300\">Yes! We offer a free plan with 2 AI generations to try out our platform. No credit card required.</p>\r\n            </div>\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">What payment methods do you accept?</h3>\r\n              <p className=\"text-gray-300\">We accept all major credit cards, PayPal, and bank transfers for Enterprise plans.</p>\r\n            </div>\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">Is my data secure?</h3>\r\n              <p className=\"text-gray-300\">Absolutely. We use enterprise-grade encryption and are SOC 2 compliant. Your data is never shared with third parties.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* CTA Section */}\r\n        <div className=\"mt-16 text-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Ready to scale your social media presence?</h2>\r\n          <p className=\"text-gray-300 mb-8\">Join thousands of content creators who trust Influencore</p>\r\n          <Link\r\n            to=\"/signup\"\r\n            className=\"inline-block px-8 py-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\r\n          >\r\n            Start Your Free Trial\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // In a real app, this would be an actual API call\r\n      if (formData.email && formData.password) {\r\n        // Store user session\r\n        localStorage.setItem('userSession', JSON.stringify({\r\n          user: {\r\n            id: 'user_123',\r\n            email: formData.email,\r\n            name: 'Demo User',\r\n            plan: 'Professional',\r\n            subscriptionStatus: 'active',\r\n            trialEndsAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString()\r\n          },\r\n          token: 'mock_jwt_token_' + Date.now(),\r\n          expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\r\n        }));\r\n        \r\n        navigate('/dashboard');\r\n      } else {\r\n        setError('Please enter both email and password');\r\n      }\r\n    } catch (err) {\r\n      setError('Login failed. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-blue-600\">\r\n            <span className=\"text-2xl\">🎯</span>\r\n          </div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\r\n            Sign in to your account\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-400\">\r\n            Or{' '}\r\n            <Link to=\"/signup\" className=\"font-medium text-blue-400 hover:text-blue-300\">\r\n              start your 14-day free trial\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        \r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {error && (\r\n            <div className=\"bg-red-900 border border-red-700 text-red-200 px-4 py-3 rounded-lg\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Enter your password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"rememberMe\"\r\n                type=\"checkbox\"\r\n                checked={formData.rememberMe}\r\n                onChange={handleInputChange}\r\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-600 rounded bg-gray-800\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-300\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <Link to=\"/forgot-password\" className=\"font-medium text-blue-400 hover:text-blue-300\">\r\n                Forgot your password?\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Signing in...\r\n                </div>\r\n              ) : (\r\n                'Sign in'\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-400\">\r\n              Don't have an account?{' '}\r\n              <Link to=\"/signup\" className=\"font-medium text-blue-400 hover:text-blue-300\">\r\n                Sign up for free\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Demo Credentials */}\r\n        <div className=\"mt-8 p-4 bg-gray-800 rounded-lg\">\r\n          <h3 className=\"text-sm font-medium text-gray-300 mb-2\">Demo Credentials:</h3>\r\n          <div className=\"text-xs text-gray-400 space-y-1\">\r\n            <p><strong>Email:</strong> demo@influencore.com</p>\r\n            <p><strong>Password:</strong> demo123</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    company: '',\r\n    plan: 'Professional',\r\n    acceptTerms: false,\r\n    acceptMarketing: false\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!formData.firstName || !formData.lastName || !formData.email || !formData.password) {\r\n      setError('Please fill in all required fields');\r\n      return false;\r\n    }\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return false;\r\n    }\r\n    if (formData.password.length < 8) {\r\n      setError('Password must be at least 8 characters long');\r\n      return false;\r\n    }\r\n    if (!formData.acceptTerms) {\r\n      setError('Please accept the terms and conditions');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    if (!validateForm()) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // Create user account\r\n      const userSession = {\r\n        user: {\r\n          id: 'user_' + Date.now(),\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          email: formData.email,\r\n          company: formData.company,\r\n          plan: formData.plan,\r\n          subscriptionStatus: 'trial',\r\n          trialEndsAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),\r\n          createdAt: new Date().toISOString()\r\n        },\r\n        token: 'mock_jwt_token_' + Date.now(),\r\n        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\r\n      };\r\n      \r\n      localStorage.setItem('userSession', JSON.stringify(userSession));\r\n      \r\n      // Redirect to onboarding\r\n      navigate('/onboarding');\r\n    } catch (err) {\r\n      setError('Registration failed. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-blue-600\">\r\n            <span className=\"text-2xl\">🎯</span>\r\n          </div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\r\n            Start your free trial\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-400\">\r\n            Already have an account?{' '}\r\n            <Link to=\"/login\" className=\"font-medium text-blue-400 hover:text-blue-300\">\r\n              Sign in\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        \r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {error && (\r\n            <div className=\"bg-red-900 border border-red-700 text-red-200 px-4 py-3 rounded-lg\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-300\">\r\n                  First name *\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.firstName}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                  placeholder=\"John\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-300\">\r\n                  Last name *\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.lastName}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                  placeholder=\"Doe\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\">\r\n                Email address *\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"john@company.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-300\">\r\n                Company (optional)\r\n              </label>\r\n              <input\r\n                id=\"company\"\r\n                name=\"company\"\r\n                type=\"text\"\r\n                value={formData.company}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Your Company\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"plan\" className=\"block text-sm font-medium text-gray-300\">\r\n                Plan *\r\n              </label>\r\n              <select\r\n                id=\"plan\"\r\n                name=\"plan\"\r\n                value={formData.plan}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n              >\r\n                <option value=\"Starter\">Starter - $19/month</option>\r\n                <option value=\"Professional\">Professional - $49/month</option>\r\n                <option value=\"Enterprise\">Enterprise - $199/month</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300\">\r\n                Password *\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                required\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Create a password\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-300\">\r\n                Confirm password *\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                required\r\n                value={formData.confirmPassword}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-3 border border-gray-600 placeholder-gray-400 text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Confirm your password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-start\">\r\n              <input\r\n                id=\"acceptTerms\"\r\n                name=\"acceptTerms\"\r\n                type=\"checkbox\"\r\n                checked={formData.acceptTerms}\r\n                onChange={handleInputChange}\r\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-600 rounded bg-gray-800 mt-1\"\r\n              />\r\n              <label htmlFor=\"acceptTerms\" className=\"ml-2 block text-sm text-gray-300\">\r\n                I agree to the{' '}\r\n                <Link to=\"/terms\" className=\"text-blue-400 hover:text-blue-300\">\r\n                  Terms of Service\r\n                </Link>{' '}\r\n                and{' '}\r\n                <Link to=\"/privacy\" className=\"text-blue-400 hover:text-blue-300\">\r\n                  Privacy Policy\r\n                </Link>\r\n                *\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start\">\r\n              <input\r\n                id=\"acceptMarketing\"\r\n                name=\"acceptMarketing\"\r\n                type=\"checkbox\"\r\n                checked={formData.acceptMarketing}\r\n                onChange={handleInputChange}\r\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-600 rounded bg-gray-800 mt-1\"\r\n              />\r\n              <label htmlFor=\"acceptMarketing\" className=\"ml-2 block text-sm text-gray-300\">\r\n                I want to receive product updates and marketing communications\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Creating account...\r\n                </div>\r\n              ) : (\r\n                'Start your 14-day free trial'\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <p className=\"text-xs text-gray-400\">\r\n              By signing up, you agree to our{' '}\r\n              <Link to=\"/terms\" className=\"text-blue-400 hover:text-blue-300\">\r\n                Terms of Service\r\n              </Link>{' '}\r\n              and{' '}\r\n              <Link to=\"/privacy\" className=\"text-blue-400 hover:text-blue-300\">\r\n                Privacy Policy\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Billing() {\r\n  const [userSession, setUserSession] = useState(null);\r\n  const [billingHistory, setBillingHistory] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadUserData();\r\n  }, []);\r\n\r\n  const loadUserData = () => {\r\n    const session = localStorage.getItem('userSession');\r\n    if (session) {\r\n      const userData = JSON.parse(session);\r\n      setUserSession(userData.user);\r\n      \r\n      // Generate mock billing history\r\n      const mockHistory = [\r\n        {\r\n          id: 'inv_001',\r\n          date: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\r\n          amount: 49.00,\r\n          status: 'paid',\r\n          description: 'Professional Plan - Monthly'\r\n        },\r\n        {\r\n          id: 'inv_002',\r\n          date: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),\r\n          amount: 49.00,\r\n          status: 'paid',\r\n          description: 'Professional Plan - Monthly'\r\n        },\r\n        {\r\n          id: 'inv_003',\r\n          date: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),\r\n          amount: 49.00,\r\n          status: 'paid',\r\n          description: 'Professional Plan - Monthly'\r\n        }\r\n      ];\r\n      setBillingHistory(mockHistory);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleUpgrade = () => {\r\n    window.open('/pricing', '_blank');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (window.confirm('Are you sure you want to cancel your subscription? You will lose access to premium features.')) {\r\n      // In a real app, this would call the API to cancel subscription\r\n      alert('Subscription cancellation request submitted. You will receive a confirmation email.');\r\n    }\r\n  };\r\n\r\n  const getPlanFeatures = (plan) => {\r\n    const features = {\r\n      'Starter': ['50 AI generations/month', '3 platforms', 'Basic templates', 'Email support'],\r\n      'Professional': ['500 AI generations/month', 'All 6 platforms', 'Advanced templates', 'Priority support', 'API access'],\r\n      'Enterprise': ['Unlimited generations', 'All platforms', 'Custom AI training', 'Dedicated support', 'White-label']\r\n    };\r\n    return features[plan] || [];\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!userSession) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Please sign in to view billing</h2>\r\n          <Link to=\"/login\" className=\"text-blue-400 hover:text-blue-300\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isTrial = userSession.subscriptionStatus === 'trial';\r\n  const trialEndDate = new Date(userSession.trialEndsAt);\r\n  const daysLeft = Math.ceil((trialEndDate - new Date()) / (1000 * 60 * 60 * 24));\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold mb-2\">Billing & Subscription</h1>\r\n          <p className=\"text-gray-400\">Manage your subscription and billing information</p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Current Plan */}\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Current Plan</h2>\r\n              \r\n              {isTrial && (\r\n                <div className=\"bg-yellow-900 border border-yellow-700 text-yellow-200 px-4 py-3 rounded-lg mb-4\">\r\n                  <strong>Trial Period:</strong> {daysLeft} days remaining in your free trial\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">{userSession.plan} Plan</h3>\r\n                  <p className=\"text-gray-400\">\r\n                    {isTrial ? 'Free Trial' : '$49/month'}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <span className={`px-3 py-1 rounded-full text-sm font-semibold ${\r\n                    isTrial ? 'bg-yellow-600' : 'bg-green-600'\r\n                  }`}>\r\n                    {isTrial ? 'Trial' : 'Active'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"font-semibold mb-2\">Plan Features:</h4>\r\n                <ul className=\"space-y-1\">\r\n                  {getPlanFeatures(userSession.plan).map((feature, index) => (\r\n                    <li key={index} className=\"flex items-center text-sm text-gray-300\">\r\n                      <span className=\"text-green-400 mr-2\">✓</span>\r\n                      {feature}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"flex space-x-4\">\r\n                <button\r\n                  onClick={handleUpgrade}\r\n                  className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Upgrade Plan\r\n                </button>\r\n                <button\r\n                  onClick={handleCancel}\r\n                  className=\"px-4 py-2 bg-red-600 rounded-lg hover:bg-red-700 transition-colors\"\r\n                >\r\n                  Cancel Subscription\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Billing History */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Billing History</h2>\r\n              <div className=\"space-y-4\">\r\n                {billingHistory.map((invoice) => (\r\n                  <div key={invoice.id} className=\"flex items-center justify-between p-4 bg-gray-700 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-semibold\">{invoice.description}</p>\r\n                      <p className=\"text-sm text-gray-400\">\r\n                        {new Date(invoice.date).toLocaleDateString()}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"font-semibold\">${invoice.amount}</p>\r\n                      <span className={`text-xs px-2 py-1 rounded ${\r\n                        invoice.status === 'paid' ? 'bg-green-600' : 'bg-yellow-600'\r\n                      }`}>\r\n                        {invoice.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Payment Methods */}\r\n          <div className=\"lg:col-span-1\">\r\n            <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Payment Methods</h2>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between p-4 bg-gray-700 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-8 h-8 bg-blue-600 rounded flex items-center justify-center mr-3\">\r\n                      <span className=\"text-white text-sm\">💳</span>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-semibold\">•••• •••• •••• 4242</p>\r\n                      <p className=\"text-sm text-gray-400\">Expires 12/25</p>\r\n                    </div>\r\n                  </div>\r\n                  <button className=\"text-blue-400 hover:text-blue-300 text-sm\">\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <button className=\"w-full px-4 py-2 border border-gray-600 rounded-lg hover:bg-gray-700 transition-colors\">\r\n                  + Add Payment Method\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Usage Stats */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Usage This Month</h2>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <div className=\"flex justify-between text-sm mb-1\">\r\n                    <span>AI Generations</span>\r\n                    <span>127 / 500</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-700 rounded-full h-2\">\r\n                    <div className=\"bg-blue-600 h-2 rounded-full\" style={{ width: '25%' }}></div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"flex justify-between text-sm mb-1\">\r\n                    <span>Platforms Connected</span>\r\n                    <span>4 / 6</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-700 rounded-full h-2\">\r\n                    <div className=\"bg-green-600 h-2 rounded-full\" style={{ width: '67%' }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React from 'react';\r\nimport { Routes, Route, Link } from 'react-router-dom';\r\nimport Home from './Home.jsx';\r\nimport Dashboard from './Dashboard.jsx';\r\nimport Generator from './Generator.jsx';\r\nimport VideoClipper from './VideoClipper.jsx';\r\nimport AdvancedVideoGenerator from './src/AdvancedVideoGenerator.jsx';\r\nimport Library from './Library.jsx';\r\nimport ProfileSettings from './ProfileSettings.jsx';\r\nimport SocialConnector from './SocialConnector.jsx';\r\nimport Pricing from './Pricing.jsx';\r\nimport Login from './Login.jsx';\r\nimport Signup from './Signup.jsx';\r\nimport Billing from './Billing.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"bg-gray-900 text-white min-h-screen\">\r\n      <nav className=\"p-4 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-6\">\r\n            <Link to=\"/\" className=\"text-xl font-bold\">🎯 Influencore</Link>\r\n            <Link to=\"/generator\" className=\"hover:text-blue-400 transition-colors\">Generator</Link>\r\n            <Link to=\"/clipper\" className=\"hover:text-blue-400 transition-colors\">Video Clipper</Link>\r\n            <Link to=\"/advanced-video\" className=\"hover:text-blue-400 transition-colors\">🎬 Veo 3 & Sora</Link>\r\n            <Link to=\"/library\" className=\"hover:text-blue-400 transition-colors\">Library</Link>\r\n            <Link to=\"/social\" className=\"hover:text-blue-400 transition-colors\">Social</Link>\r\n            <Link to=\"/dashboard\" className=\"hover:text-blue-400 transition-colors\">Dashboard</Link>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Link to=\"/pricing\" className=\"hover:text-blue-400 transition-colors\">Pricing</Link>\r\n            <Link to=\"/login\" className=\"hover:text-blue-400 transition-colors\">Sign In</Link>\r\n            <Link to=\"/signup\" className=\"px-4 py-2 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\">\r\n              Start Free Trial\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/generator\" element={<Generator />} />\r\n        <Route path=\"/clipper\" element={<VideoClipper />} />\r\n        <Route path=\"/advanced-video\" element={<AdvancedVideoGenerator />} />\r\n        <Route path=\"/library\" element={<Library />} />\r\n        <Route path=\"/social\" element={<SocialConnector />} />\r\n        <Route path=\"/profile\" element={<ProfileSettings />} />\r\n        <Route path=\"/dashboard\" element={<Dashboard />} />\r\n        <Route path=\"/pricing\" element={<Pricing />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n        <Route path=\"/billing\" element={<Billing />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App.jsx';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","Home","videoUrl","setVideoUrl","useState","isProcessing","setIsProcessing","features","testimonials","stats","jsxs","jsx","Link","stat","index","feature","testimonial","Dashboard","setStats","userSession","setUserSession","useEffect","loadDashboardData","session","savedPosts","generatedPosts","connections","userProfile","posts","connectionsData","totalEngagement","sum","post","baseEngagement","avgEngagement","_a","quickActions","action","activity","platform","Generator","messages","setMessages","input","setInput","loading","setLoading","userPlan","setUserPlan","remainingFree","setRemainingFree","showUpgradeModal","setShowUpgradeModal","selectedMode","setSelectedMode","messagesEndRef","useRef","modes","suggestions","loadUserPlan","scrollToBottom","user","generateResponse","userMessage","mockUser","response","axios","aiMessage","prev","err","_b","fallbackResponse","getFallbackResponse","message","mode","responses","handleSubmit","handleSuggestionClick","suggestion","VideoClipper","processingStep","setProcessingStep","clips","setClips","processingSteps","i","resolve","clip","API_CONFIG","environment","config","apiClient","token","error","AdvancedVideoGenerator","prompt","setPrompt","selectedModel","setSelectedModel","isGenerating","setIsGenerating","generatedVideo","setGeneratedVideo","models","setModels","capabilities","setCapabilities","imageUrl","setImageUrl","options","setOptions","fetchModels","generateVideo","endpoint","requestData","getModelInfo","modelKey","model","info","Library","setPosts","selectedPost","setSelectedPost","searchTerm","setSearchTerm","filterPlatform","setFilterPlatform","loadPosts","addSamplePosts","savePosts","newPosts","deletePost","id","updatePost","updates","updatedPosts","filteredPosts","matchesSearch","_c","tag","matchesPlatform","exportPosts","dataStr","dataBlob","url","link","samplePosts","event","file","reader","importedPosts","postData","ProfileSettings","profile","setProfile","theme","setTheme","isLoading","setIsLoading","savedProfile","savedTheme","handleAvatarChange","handleInputChange","name","value","newTheme","SocialConnector","setConnections","isConnecting","setIsConnecting","selectedPlatform","setSelectedPlatform","platforms","loadConnections","saved","saveConnections","newConnections","simulateOAuthFlow","mockUsernames","mockDisplayNames","username","displayName","followers","following","mockConnection","disconnectPlatform","platformId","refreshToken","connection","updatedConnection","testConnection","unconnected","scope","Pricing","billingCycle","setBillingCycle","plans","handleSubscribe","planName","paymentUrl","plan","Fragment","featureIndex","Login","formData","setFormData","setError","navigate","useNavigate","type","checked","Signup","validateForm","Billing","billingHistory","setBillingHistory","loadUserData","userData","mockHistory","handleUpgrade","handleCancel","getPlanFeatures","isTrial","trialEndDate","daysLeft","invoice","App","Routes","Route","ReactDOM","React","BrowserRouter"],"mappings":"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","x_google_ignoreList":[0,1,2]}